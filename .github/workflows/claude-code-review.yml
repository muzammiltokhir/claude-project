name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  code-review:
    runs-on: ubuntu-latest
    name: Claude AI Code Review
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Claude Code Review
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          prompt: |
            You are an expert code reviewer specializing in TypeScript, Node.js, Express, and Firebase development.
            
            Please review this pull request with focus on:
            
            **Code Quality & Best Practices:**
            - Code readability, maintainability, and clarity
            - Proper error handling and edge case coverage
            - Performance considerations and potential optimizations
            - Consistent coding style and patterns
            - DRY (Don't Repeat Yourself) principle adherence
            
            **TypeScript Specific:**
            - Proper type definitions and type safety
            - Avoiding use of 'any' type where possible
            - Interface vs type usage appropriateness
            - Proper async/await usage and Promise handling
            - Generic types usage where beneficial
            
            **Node.js & Express Best Practices:**
            - Proper middleware implementation and ordering
            - Route handler error handling
            - Request validation and sanitization
            - Response status codes and error messages
            - Async operation handling in routes
            
            **Firebase & Firestore Patterns:**
            - Efficient Firestore queries and data modeling
            - Proper Firebase Admin SDK usage
            - Transaction and batch operation usage where appropriate
            - Security rules considerations
            - Cloud Functions best practices (cold starts, timeouts, memory usage)
            
            **Security Concerns:**
            - Authentication and authorization implementation
            - Input validation and sanitization
            - SQL/NoSQL injection prevention
            - Sensitive data handling
            - API rate limiting and abuse prevention
            
            **Potential Bugs:**
            - Logic errors and edge cases
            - Race conditions in async code
            - Memory leaks or resource cleanup issues
            - Null/undefined handling
            - Error propagation
            
            Please provide constructive, actionable feedback. For each issue:
            1. Clearly identify the concern
            2. Explain why it matters
            3. Suggest a specific improvement or solution
            
            If the code looks good, acknowledge what was done well. Focus on significant issues rather than nitpicks.
